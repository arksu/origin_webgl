apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

sourceCompatibility = 17
targetCompatibility = 17

idea {
    module {
        excludeDirs += file('out')
    }
}

sourceSets {
    main {
        java.srcDir 'src'
        resources.srcDir 'res'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

repositories {
    mavenCentral()
}

buildscript {
    ext {
        kotlin_version = '1.8.21'
        ktor_version = '2.3.1' // https://ktor.io/
        exposed_version = '0.41.1' // https://github.com/JetBrains/Exposed
        slf4j_version = '1.7.36' // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-cors:$ktor_version"
    implementation "io.ktor:ktor-server-status-pages:$ktor_version"
    implementation "io.ktor:ktor-server-call-logging:$ktor_version"
    implementation "io.ktor:ktor-server-default-headers:$ktor_version"
    implementation "io.ktor:ktor-server-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-server-cio:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-websockets:$ktor_version"
    implementation "io.ktor:ktor-serialization-gson:$ktor_version"

    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jodatime:$exposed_version"

    implementation "org.slf4j:slf4j-api:$slf4j_version"
    implementation "org.slf4j:slf4j-log4j12:$slf4j_version"

    implementation 'com.google.code.gson:gson:2.9.1'

    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.9'
    implementation 'com.typesafe:config:1.4.2'
}

task mapgen(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.origin.utils.MapGenerator'
}
task mapimport(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.origin.utils.MapImporter'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        def manifestClasspath =
                configurations.compileClasspath.collect { it.name }.join(' ')

        attributes 'Implementation-Title': 'origin',
                'Main-Class': 'com.origin.ServerLauncher',
                'Class-Path': manifestClasspath
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
